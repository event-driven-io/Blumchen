using Blumchen;
using FsCheck.Xunit;

namespace UnitTests
{
    public class message_table_creation
    {
        [Fact]
        public void default_table_descriptor()
        {
             const string sql = """
                                 CREATE TABLE IF NOT EXISTS outbox (
                                    id Bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
                                    message_type Varchar(250) NOT NULL,
                                    data Jsonb NOT NULL
                                 );
                                 """;

            var implicitTableDescriptor = new TableDescriptorBuilder().Build();
            var explicitTableDescriptor = new TableDescriptorBuilder().UseDefaults().Build();
            Assert.Equal(implicitTableDescriptor.ToString(), explicitTableDescriptor.ToString());
            Assert.Equal(sql, implicitTableDescriptor.ToString());
        }

        [Property]
        public void with_varying_descriptor(
            string tableName,
            string idColName,
            string messageTypeColName,
            int messageTypeColDimension,
            string dataColName)
        {
            var sql = $"""
                       CREATE TABLE IF NOT EXISTS {tableName} (
                          {idColName} Bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
                          {messageTypeColName} Varchar({messageTypeColDimension}) NOT NULL,
                          {dataColName} Jsonb NOT NULL
                       );
                       """;

            var tableDescriptor = new TableDescriptorBuilder()
                .Named(tableName)
                .Id(idColName)
                .MessageType(messageTypeColName, messageTypeColDimension)
                .MessageData(dataColName)
            .Build();
            
            Assert.Equal(sql, tableDescriptor.ToString());
        }
    }
}
